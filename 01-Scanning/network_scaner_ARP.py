from scapy.all import *
import argparse
import socket

def arpPacket(args):
    interface = 'eth0'
    ip_range = args.ip + '/24'
    broadcastMac = 'ff:ff:ff:ff:ff:ff'
    
    packet = Ether(dst=broadcastMac)/ARP(pdst=ip_range)#/IP()
    
    print('try request for ip -> ', ip_range)
    alive, dead = srp(packet, timeout=2, iface=interface) # inter=0.1
    
    for send, receive in alive:
        try:
            hostname = socket.gethostbyaddr(receive.psrc)[0]
        except:
            hostname = 'no hostname'

        print(receive.src, ' - ', 
                receive.psrc, ' - ',
                hostname)

def parser():
    parser = argparse.ArgumentParser(description='First try scapy for network discovery')

    parser.add_argument('-ip', dest='ip', help='dest IP', required=True)

    return parser.parse_args()

args = parser()

if args: 
    arpPacket(args)
