import sys, socket, argparse
from scapy.all import *
# import scapy.all as scapy


def parser():
    parser = argparse.ArgumentParser(description='TODO')

    parser.add_argument('-ip', dest='ip', help='dest IP', required=True)
    parser.add_argument('-hops', dest='hops', help='range port 24/16/8', required=True)
    parser.add_argument('-timeout', dest='timeout', help='maximum delai de wait for a syn from a hote(ms)', required=True)

    return parser.parse_args()

def getHostnameByIP(ip):
    try:
        hostname = socket.gethostbyaddr(ip)[0]
    except:
        hostname = 'no hostname found'

    return hostname

def traceroute(args):
    originalHostname = getHostnameByIP(args.ip)
    hops = int(args.hops) 
    
    print('''start traceroute with these informations : \nhostname : {:s}, \nIP : {:s}, \nRange (hops) : {:s}, \ntimeout : {:s}'''.format(originalHostname, args.ip, args.hops, args.timeout))
    
    # first loop to send a ICMP echo where the TTL (time to live) will be incremented by 1 until I find a host.
    for i in range(1, hops+1):
        # send first packet and retrieve the first response
        packet = IP(dst=args.ip, ttl=i)/ICMP(type='echo-request')
        packets = scapy.sendrecv.sr1(packet, verbose=False, timeout=int(args.timeout))
        
        # if I have any packets 
        if packets:
            # try to get the hostname 
            hostname = getHostnameByIP(packets[0].src)[0]
            print(i, hostname, packet[O].src)
        else:
            print('[{:80d}] Hors delai !'.format(i))
        


args = parser()
traceroute(args)
