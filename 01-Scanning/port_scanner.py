# Like nmap

import sys, socket, argparse
import pyfiglet # change ASCII text to ASCII art font

# Create and print the banner
ascii_banner = pyfiglet.figlet_format('Port Scanner')
print(ascii_banner)

def parser():
    parser = argparse.ArgumentParser(description='retrieve all open port in a server')

    parser.add_argument('-ip', dest='ip', help='dest ip', required=True)

    return parser.parse_args()

def getHostnameByIP(ip):
    hostname = ''
    try:
        hostname = socket.gethostbyaddr(ip)
    except:
        hostname = 'no hostname found'
    return hostname

def probe_port(ip, port, result=1):
#    print('probe_port for port --> ', port)
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#        print('sock --> ',sock)
        sock.settimeout(0.5)
        response = sock.connect_ex((ip, port))
#        print('response -->', response)
        if response == 0:
            result = response
        sock.close()
    except Exception as e:
        pass
    return result

def portScanner(args):
    ip = args.ip
    open_ports = []
    ports = range(1, 65535)

    for port in ports:
#        print('port --> ', port)
        sys.stdout.flush()
        response = probe_port(ip, port)
        if response == 0:
            open_ports.append(port)

    return open_ports

args = parser()
print('get open port for ',args.ip,' (', getHostnameByIP(args.ip),')')
open_ports = portScanner(args)

if open_ports:
    print('Open ports are : ')
    print(sorted(open_ports))
else:
    print('no ports are open')
